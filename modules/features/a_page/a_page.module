<?php
/**
 * @file
 * Code for the Atlast Page feature.
 */

include_once 'a_page.features.inc';

/**
 * Implements hook_atlast_api_menu_items().
 */
function a_page_atlast_api_menu_items($instance) {
  $pages_nodes = node_load_multiple(NULL, array(
    'uid' => $instance->uid,
    'type' => 'a_page'
  ));

  $pages = array();

  foreach ($pages_nodes as $nid => $page) {
    $pages[] = array(
      'title' => $page->title,
      'attributes' => array(
        'id' => 'page-' . $page->nid,
        'data-id' => $page->nid,
        'href' => '#',
        'class' => 'page'
      )
    );
  }

  return $pages;
}

/**
 * Implements hook_atlast_api_js().
 */
function a_page_atlast_api_js($instance) {
  return array(
    array(
      'file' => drupal_get_path('module', 'a_page') . '/js/a_page.app.js',
    )
  );
}

/**
 * Implements hook_node_access_records().
 */
function a_page_node_access_records($node) {
  $instance = user_load($node->uid);

  // Rebuild the menu.
  a_api_atlast_api_get_menu($instance, TRUE);
}

/**
 * Implements hook_atlast_api().
 */
function a_page_atlast_api($instance, $timestamp = NULL) {
  $api = array();

  if ($timestamp) {
    $timestamp = 0;
  }

  // Pages
  if (a_api_atlast_api_check_is_needed($instance, 'pages', $timestamp)) {
    $api['pages'] = a_page_get_pages($instance, TRUE);
  }

  return $api;
}

/**
 * Returns the menu, gets cached.
 */
function a_page_get_pages($instance, $reset = NULL) {
  $pages = &drupal_static(__FUNCTION__);
  if (!isset($pages) || $reset) {
    if ($cache = cache_get('atlast_api_pages_' . $instance->uid) && !$reset) {
      $pages = $cache->data;
    }
    else {
      $pages_nodes = node_load_multiple(NULL, array(
        'uid' => $instance->uid,
        'type' => 'a_page'
      ));

      $pages = array();

      foreach ($pages_nodes as $nid => $page) {
        $pages[$page->nid] = array(
          'title' => $page->title,
          'attributes' => array(
            'id' => $page->nid,
            'class' => array('page')
          ),
          'id' => $page->nid,
          'content' => $page->field_a_page_body[LANGUAGE_NONE][0]['safe_value']
        );
      }
      cache_set('atlast_api_pages_' . $instance->uid, $pages, 'cache');
    }
  }

  return $pages;
}

/**
 * Implements hook_kw_manifests_info().
 */
function a_page_kw_manifests_info() {
  return array('a_page' => array(
    'callback' => 'a_page_manifest_define_pages',
  ));
}

/**
 * Creates test content via kw_itemnames.
 */
function a_page_manifest_define_pages() {
  kw_itemnames_ensure(
    'user',
    'henk-jansen',
    array(
      'name' => 'Henk Jansen',
    ),
    array(
      'language' => LANGUAGE_NONE,
      'roles' => array(
        '3' => 'instance'
      ),
      'field_user_map_url' => array(
        LANGUAGE_NONE => array(
          array('url' => 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png')
        )
      ),
      'status' => TRUE,
      'field_user_slug' => array(
        LANGUAGE_NONE => array(
          array('machine' => 'henk-jansen')
        )
      ),
      'field_user_map_bounds' => array(
        LANGUAGE_NONE => array(
          array('value' => '{"type":"FeatureCollection","features":[{"type":"Feature","properties":{},"geometry":{"type":"Polygon","coordinates":[[[5.950469970703125,52.46103016351592],[5.950469970703125,52.55965567958739],[6.258087158203125,52.55965567958739],[6.258087158203125,52.46103016351592],[5.950469970703125,52.46103016351592]]]}}]}')
        )
      )
    )
  );

  $instance_uid = kw_itemnames_item_id('user', 'henk-jansen');

  kw_itemnames_ensure(
    'node',
    'test-item-1',
    array(
      'title' => 'Lorem ipsum',
    ),
    array(
      'type' => 'a_page',
      'uid' => $instance_uid,
      'language' => LANGUAGE_NONE,
      'field_a_page_body' => array(
        LANGUAGE_NONE => array(array(
          'value' => 'Phasellus in ante eu urna gravida vestibulum. Sed sit amet ullamcorper elit. Sed elit mauris, gravida a tortor tincidunt, tincidunt blandit libero. Vivamus luctus vitae lacus et faucibus! Donec tempor nunc et condimentum adipiscing. Maecenas viverra venenatis ipsum, sed malesuada nisi viverra fusce.',
          'format' => 'plain_text',
        ))
      )
    )
  );

  kw_itemnames_ensure(
    'node',
    'test-item-2',
    array(
      'title' => 'Sed sit amet ullamcorper elit',
    ),
    array(
      'type' => 'a_page',
      'uid' => $instance_uid,
      'language' => LANGUAGE_NONE,
      'field_a_page_body' => array(
        LANGUAGE_NONE => array(array(
          'value' => 'Sed quis accumsan est. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum porttitor, mauris in faucibus malesuada, ante nunc tristique nisi, eu rutrum metus purus ac erat. Aliquam augue arcu, eleifend in tincidunt et, fermentum sed metus posuere.

            Donec malesuada laoreet tellus. Morbi sit amet velit sapien. Nunc tempus lacus imperdiet magna ultricies; sed condimentum diam rutrum. Donec ullamcorper facilisis lacus, vitae suscipit arcu venenatis congue? Phasellus sed nunc et arcu feugiat facilisis vel at nisi. Pellentesque facilisis massa nunc.',
          'format' => 'plain_text',
        ))
      )
    )
  );
}
